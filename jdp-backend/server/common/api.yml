openapi: 3.0.1
info:
  title: jdp
  description: jdp contest 
  version: 1.0.0
servers:
  - url: /api/v1
tags:
  - name: votes
    description: Vote API specification
  - name: Specification
    description: The swagger API specification
paths:
  /votes/token:
    post:
      tags:
        - votes
      parameters:
        - name: recipient
          in: query
          description: receiver address
          required: true
          schema:
            type: string
        - name: amount
          in: query
          description: token value
          required: true
          schema:
            type: number
      responses:
        200:
          description: return result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Example'
        4XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        5XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      tags:
        - votes
      parameters:
        - name: account
          in: query
          description: target address
          required: true
          schema:
            type: string
      responses:
        200:
          description: return result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Example'
        4XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        5XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /votes/event:
    post:
      tags:
        - votes
      description: creatEvent
      requestBody:
        description: Data analyzed request object
        content:
          application/json:
            schema:
              type: object
              properties:
                eventId:
                  type: number
                candidates:
                  type: array
                  items:
                    type: string
      responses:
        200:
          description: return result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Example'
        4XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        5XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      tags:
        - votes
      parameters:
        - name: eventId
          in: query
          description: eventId
          required: true
          schema:
            type: number
      responses:
        200:
          description: return result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Example'
        4XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        5XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /votes/reward:
    post:
      tags:
        - votes
      parameters:
        - name: eventId
          in: query
          description: eventID
          required: true
          schema:
            type: number
        - name: amount
          in: query
          description: token value
          required: true
          schema:
            type: number
      responses:
        200:
          description: return result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Example'
        4XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        5XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /votes/state:
    post:
      tags:
        - votes
      parameters:
        - name: eventId
          in: query
          description: evetId
          required: true
          schema:
            type: number
        - name: state
          in: query
          description: change state 0 OPEN 1 CLOSED 2 SETREFUNDABLE
          required: true
          schema:
            type: number
      responses:
        200:
          description: return result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Example'
        4XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        5XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      tags:
        - votes
      parameters:
        - name: eventId
          in: query
          description: eventId
          required: true
          schema:
            type: number
      responses:
        200:
          description: return result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Example'
        4XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        5XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /spec:
    get:
      tags:
        - Specification
      responses:
        200:
          description: Return the API specification
          content: {}
components:
  schemas:
    Example:
      type: object
      properties:
        id:
          type: integer
          example: 3
        name:
          type: string
          example: example 3
    Error:
      type: object
      additionalProperties: true

    ExampleBody:
      title: example
      required:
        - name
      type: object
      properties:
        name:
          type: string
          example: no_stress
